# ============================================================================
# Nginx Configuration for CloudWaste Production
# Domain: cutcosts.tech
# ============================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml font/truetype font/opentype
               application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
    limit_req_status 429;

    # Cache for static files
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static_cache:10m
                     max_size=100m inactive=60m use_temp_path=off;

    # Upstream backends
    upstream frontend_upstream {
        server frontend:3000 max_fails=3 fail_timeout=30s;
    }

    upstream backend_upstream {
        server backend:8000 max_fails=3 fail_timeout=30s;
    }

    # ========================================================================
    # HTTP - Redirect to HTTPS
    # ========================================================================
    server {
        listen 80;
        listen [::]:80;
        server_name cutcosts.tech www.cutcosts.tech;

        # Allow ACME challenge for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Health check endpoint (no redirect)
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # ========================================================================
    # HTTPS - Main server block
    # ========================================================================
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name cutcosts.tech www.cutcosts.tech;

        # SSL certificates (Let's Encrypt)
        ssl_certificate /etc/letsencrypt/live/cutcosts.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/cutcosts.tech/privkey.pem;

        # SSL configuration (modern, secure)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_stapling on;
        ssl_stapling_verify on;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # --------------------------------------------------------------------
        # Backend API - /api/*
        # --------------------------------------------------------------------
        location /api/ {
            # Rate limiting
            limit_req zone=api_limit burst=20 nodelay;

            # Proxy settings
            proxy_pass http://backend_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;  # 5 minutes for long-running scans
        }

        # --------------------------------------------------------------------
        # API Documentation - /docs and /redoc
        # --------------------------------------------------------------------
        location ~ ^/(docs|redoc|openapi.json) {
            proxy_pass http://backend_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # --------------------------------------------------------------------
        # Next.js Static Files - /_next/*
        # --------------------------------------------------------------------
        location /_next/static/ {
            proxy_pass http://frontend_upstream;
            proxy_http_version 1.1;
            proxy_cache static_cache;
            proxy_cache_valid 200 60m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            add_header X-Cache-Status $upstream_cache_status;

            # Long cache for static assets
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # --------------------------------------------------------------------
        # Frontend - All other routes
        # --------------------------------------------------------------------
        location / {
            proxy_pass http://frontend_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # --------------------------------------------------------------------
        # Health check endpoint
        # --------------------------------------------------------------------
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
    }
}
