# Application
APP_NAME=CloudWaste
APP_ENV=development
DEBUG=True

# Security - ENCRYPTION KEY MANAGEMENT
# ⚠️  CRITICAL: DO NOT MANUALLY SET ENCRYPTION_KEY IN PRODUCTION!
#
# CloudWaste automatically generates and manages ENCRYPTION_KEY on first startup.
# The key is stored in a persistent Docker volume and validated on every startup.
#
# ⚠️  IF YOU CHANGE THIS KEY AFTER CLOUD ACCOUNTS ARE CREATED:
#     - ALL cloud account credentials become UNRECOVERABLE
#     - Users must re-enter ALL credentials (DATA LOSS!)
#
# For development/testing ONLY, you can pre-set a key here.
# For production, leave this as placeholder - init_encryption.sh will handle it.
#
# To generate a key manually (NOT RECOMMENDED):
#   python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
#
# See ENCRYPTION_KEY_MANAGEMENT.md for complete details.
SECRET_KEY=your-secret-key-change-in-production
ENCRYPTION_KEY=AUTO_GENERATED_ON_FIRST_STARTUP_DO_NOT_CHANGE
JWT_SECRET_KEY=your-jwt-secret-key-change-in-production
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=15
REFRESH_TOKEN_EXPIRE_DAYS=7

# Database
DATABASE_URL=postgresql+asyncpg://cloudwaste:cloudwaste_dev_password@localhost:5432/cloudwaste

# Redis
REDIS_URL=redis://localhost:6379/0

# Celery
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# AWS (Optional - for testing)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=eu-west-1

# Email (SendGrid, Mailgun, etc.)
SMTP_HOST=smtp.sendgrid.net
SMTP_PORT=587
SMTP_USER=apikey
SMTP_PASSWORD=your-sendgrid-api-key
EMAILS_FROM_EMAIL=noreply@cloudwaste.com
EMAILS_FROM_NAME=CloudWaste

# Frontend
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_APP_NAME=CloudWaste
