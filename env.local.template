# ============================================================================
# CLOUDWASTE - CONFIGURATION DÉVELOPPEMENT LOCAL
# ============================================================================
# Ce fichier est un template pour votre environnement de développement local
# Copiez-le vers .env et remplissez les valeurs
# ============================================================================

# ============================================================================
# DATABASE (PostgreSQL)
# ============================================================================
POSTGRES_USER=cloudwaste
POSTGRES_PASSWORD=cloudwaste_dev_password
POSTGRES_DB=cloudwaste
DATABASE_URL=postgresql+asyncpg://cloudwaste:cloudwaste_dev_password@postgres:5432/cloudwaste

# ============================================================================
# REDIS (Cache & Queue)
# ============================================================================
REDIS_URL=redis://redis:6379/0
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# ============================================================================
# APPLICATION
# ============================================================================
APP_ENV=development
DEBUG=true
SECRET_KEY=dev-secret-key-change-this-in-production-12345678
ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# ============================================================================
# FRONTEND
# ============================================================================
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_APP_NAME=CloudWaste

# ============================================================================
# AZURE CREDENTIALS (Optionnel pour développement)
# ============================================================================
# Obtenez ces valeurs depuis le portail Azure:
# https://portal.azure.com → Azure Active Directory → App registrations
# 
# Si vous ne testez pas les scans Azure, vous pouvez laisser ces champs vides

AZURE_TENANT_ID=
AZURE_CLIENT_ID=
AZURE_SUBSCRIPTION_ID=
AZURE_CLIENT_SECRET=

# ============================================================================
# AWS CREDENTIALS (Optionnel pour développement)
# ============================================================================
# Obtenez ces valeurs depuis AWS IAM:
# https://console.aws.amazon.com/iam/
# 
# Si vous ne testez pas les scans AWS, vous pouvez laisser ces champs vides

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1

# ============================================================================
# EMAIL (Optionnel pour développement)
# ============================================================================
# Configuration pour l'envoi d'emails (notifications, etc.)
# Peut rester vide en développement

EMAILS_ENABLED=false
EMAILS_FROM_EMAIL=
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_TLS=true

# ============================================================================
# ENCRYPTION KEY (Généré automatiquement)
# ============================================================================
# Cette clé est générée automatiquement par init_encryption.sh
# Ne la modifiez pas manuellement

# ENCRYPTION_KEY=  # Auto-generated on first run

# ============================================================================
# NOTES
# ============================================================================
# 
# Pour le développement local:
# 1. Copiez ce fichier vers .env
# 2. Les services de base (DB, Redis) fonctionnent avec les valeurs par défaut
# 3. Configurez Azure/AWS uniquement si vous testez les scans cloud
# 4. Le hot-reload est activé par défaut
# 
# Pour tester avec de vraies données Azure/AWS:
# 1. Créez un Service Principal dans Azure / IAM User dans AWS
# 2. Ajoutez les credentials dans ce fichier
# 3. Redémarrez les conteneurs : docker compose restart
# 
# ============================================================================

