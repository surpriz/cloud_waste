# ============================================================================
# CloudWaste - Production Environment Variables
# ============================================================================
#
# IMPORTANT: Copy this file to `.env.prod` and fill in the values
#            NEVER commit .env.prod to Git (it contains secrets)
#
# Usage:
#   cp .env.prod.example .env.prod
#   nano .env.prod  # Edit values
# ============================================================================

# ----------------------------------------------------------------------------
# Application
# ----------------------------------------------------------------------------
APP_NAME=CloudWaste
APP_ENV=production
DEBUG=False

# ----------------------------------------------------------------------------
# Security - CRITICAL: CHANGE ALL THESE IN PRODUCTION
# ----------------------------------------------------------------------------

# Secret key for general application encryption (generate with: openssl rand -hex 32)
SECRET_KEY=CHANGE_ME_GENERATE_WITH_OPENSSL_RAND_HEX_32

# JWT token secret (generate with: openssl rand -hex 32)
JWT_SECRET_KEY=CHANGE_ME_GENERATE_WITH_OPENSSL_RAND_HEX_32
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=15
REFRESH_TOKEN_EXPIRE_DAYS=7

# Encryption key for cloud credentials (AUTO-GENERATED on first startup)
# ⚠️  DO NOT MANUALLY SET THIS - Let init_encryption.sh handle it
# ⚠️  If you change this key after adding cloud accounts, ALL credentials become UNRECOVERABLE
ENCRYPTION_KEY=AUTO_GENERATED_DO_NOT_CHANGE

# ----------------------------------------------------------------------------
# Database - PostgreSQL
# ----------------------------------------------------------------------------
POSTGRES_USER=cloudwaste
POSTGRES_PASSWORD=CHANGE_ME_STRONG_PASSWORD_HERE
POSTGRES_DB=cloudwaste

# Database connection URL (used by backend)
DATABASE_URL=postgresql+asyncpg://cloudwaste:CHANGE_ME_STRONG_PASSWORD_HERE@postgres:5432/cloudwaste

# ----------------------------------------------------------------------------
# Redis - Cache & Queue
# ----------------------------------------------------------------------------
REDIS_URL=redis://redis:6379/0

# ----------------------------------------------------------------------------
# Celery - Background Jobs
# ----------------------------------------------------------------------------
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# ----------------------------------------------------------------------------
# Email - SMTP Configuration
# ----------------------------------------------------------------------------
# For SendGrid:
SMTP_HOST=smtp.sendgrid.net
SMTP_PORT=587
SMTP_USER=apikey
SMTP_PASSWORD=YOUR_SENDGRID_API_KEY_HERE

# For other providers (Gmail, AWS SES, etc.), adjust accordingly
EMAILS_FROM_EMAIL=noreply@cutcosts.tech
EMAILS_FROM_NAME=CloudWaste

# ----------------------------------------------------------------------------
# AWS (Optional - For testing with your own AWS account)
# ----------------------------------------------------------------------------
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=eu-west-1

# ----------------------------------------------------------------------------
# Azure (Optional - For testing with your own Azure account)
# ----------------------------------------------------------------------------
AZURE_TENANT_ID=
AZURE_CLIENT_ID=
AZURE_CLIENT_SECRET=
AZURE_SUBSCRIPTION_ID=

# ----------------------------------------------------------------------------
# Domain & URLs
# ----------------------------------------------------------------------------
DOMAIN=cutcosts.tech
NEXT_PUBLIC_API_URL=https://cutcosts.tech
NEXT_PUBLIC_APP_NAME=CloudWaste

# ----------------------------------------------------------------------------
# Monitoring (Optional)
# ----------------------------------------------------------------------------
# Sentry DSN for error tracking (optional)
SENTRY_DSN=

# ----------------------------------------------------------------------------
# NOTES
# ----------------------------------------------------------------------------
#
# 1. Generate secure secrets:
#    openssl rand -hex 32
#
# 2. PostgreSQL password should be:
#    - At least 16 characters
#    - Mix of uppercase, lowercase, numbers, special chars
#    - Example: Xk9$mP2vL#8qR5nT@7wZ
#
# 3. For SendGrid:
#    - Create account at sendgrid.com
#    - Generate API key with "Mail Send" permission
#    - Verify sender email (noreply@cutcosts.tech)
#
# 4. Encryption key is auto-generated:
#    - Stored in Docker volume "encryption_key"
#    - Persistent across container restarts
#    - Backup this volume regularly (see deployment/backup-db.sh)
#
# ============================================================================
