"""Add detection_rules table

Revision ID: 4661d3e99224
Revises: 92aa66830ad2
Create Date: 2025-10-02 17:12:28.422777

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4661d3e99224'
down_revision: Union[str, None] = '92aa66830ad2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('detection_rules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('rules', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_detection_rules_id'), 'detection_rules', ['id'], unique=False)
    op.create_index(op.f('ix_detection_rules_resource_type'), 'detection_rules', ['resource_type'], unique=False)
    op.create_index(op.f('ix_detection_rules_user_id'), 'detection_rules', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_detection_rules_user_id'), table_name='detection_rules')
    op.drop_index(op.f('ix_detection_rules_resource_type'), table_name='detection_rules')
    op.drop_index(op.f('ix_detection_rules_id'), table_name='detection_rules')
    op.drop_table('detection_rules')
    # ### end Alembic commands ###
